{"version":3,"sources":["Components/Header/Header.js","Services/Service.js","Components/Loader/Loader.js","Components/RandomPlanetBar/RandomPlanetBar.js","Components/Person/PersonCard.js","Components/Person/Person.js","Components/Planets/PlanetCard.js","Components/Planets/Planets.js","Components/Starships/StarshipsCard.js","Components/Starships/Starships.js","Components/App/App.js","index.js"],"names":["Header","className","to","activeClassName","SwapiService","_apiBase","_transformPlanet","planet","id","_extractId","name","population","rotationPeriod","rotation_period","diameter","climate","_transformStarship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","cargo_capacity","_transformPerson","person","gender","birthYear","eyeColor","url","fetch","this","res","ok","Error","status","json","getResource","results","map","item","match","Loader","RandomPlanetBar","service","useState","setId","planetName","setPlanetName","setPopulation","setRotationPeriod","setDiameter","loading","setLoading","useEffect","timer","setTimeout","planetId","Math","floor","random","getPlanet","then","catch","err","clearTimeout","src","alt","key","PersonCard","props","React","setPerson","setName","setGender","setBirthYear","setEyeColor","personId","getPerson","Person","peopleList","setPeopleList","activeItem","setActiveItem","getAllPeople","onClick","onItemSelected","PlanetCard","setClimate","Planets","planetList","setPlanetList","getAllPlanets","onPlanetSelected","StarshipsCard","setModel","setManufacturer","setLength","setCargoCapacity","starshipId","getStarships","Starships","starshipList","setStarshipList","getAllStarships","onStarshipSelected","App","selectedPerson","setSelectedPerson","selectedPalnet","setSelectedPlanet","selectedStarship","setSelectdStarship","onPersonSelected","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.30d75238.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Header.css\";\nconst Header = () => {\n  return (\n    <header className=\"header-container\">\n      <h1>Star BD</h1>\n      <nav className=\"nav-container\">\n        <ul className=\"list-item-container\">\n          <li className=\"list-item\">\n            <NavLink to=\"/person\" activeClassName=\"active\">\n            People\n            </NavLink>\n          </li>\n          <li className=\"list-item\">\n          <NavLink to=\"/planets\" activeClassName=\"active\">\n            Planets\n            </NavLink>\n          </li>\n          <li className=\"list-item\">\n          <NavLink to=\"/starships\" activeClassName=\"active\">\n            Starships\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","export default class SwapiService{\n    _apiBase = `https://swapi.dev/api`;\n    async getResource(url){\n        const res = await fetch(`${this._apiBase}${url}`);\n        if(!res.ok){\n            throw new Error(`not fetch ${ url }` + `, received ${ res.status }`)\n        }\n        return await res.json();\n    }\n    async getAllPeople(){\n        const res = await this.getResource(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n    async getPerson(id){\n        let person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person)\n    }\n\n    async getAllPlanets(){\n        const res = await this.getResource(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n    async getPlanet(id){\n        const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet)\n    }\n    async getAllStarships(){\n        const res = await this.getResource(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n    async getStarships(id){\n       const starship = await this.getResource(`/starships/${id}/`);\n       return this._transformStarship(starship)\n    }\n    _extractId(item){\n        const idRegExp = /\\/([0-9]*)\\/$/; \n        let id = item.url.match(idRegExp)[1];\n        return id;\n    }\n    _transformPlanet=(planet)=>{\n        return{\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter:planet.diameter,\n            climate:planet.climate\n        };\n\n    }\n    _transformStarship=(starship)=>{\n        return{\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers:starship.passengers,\n            cargoCapacity: starship.cargo_capacity\n        }\n    }\n    _transformPerson=(person)=>{\n        return{\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birthYear,\n            eyeColor: person.eyeColor,\n\n        }\n\n    }\n}","import React from 'react';\nimport \"./Loader.css\";\n//https://projects.lukehaas.me/css-loaders/#load3\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            Loading...\n        </div>\n    );\n};\n\nexport default Loader;","import React, { useState, useEffect } from \"react\";\nimport SwapiService from \"../../Services/Service\";\nimport Loader from \"../Loader/Loader\";\nimport \"./RandomPlanetBar.css\";\nconst RandomPlanetBar = () => {\n  let service  = new SwapiService();\n  const [id, setId] = useState(null);\n  const [planetName, setPlanetName] = useState(null);\n  const [population, setPopulation] = useState(null);\n  const [rotationPeriod, setRotationPeriod] = useState(null);\n  const [diameter, setDiameter] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(()=>{\n    const updatePlanet = ()=>{\n    const planetId = (Math.floor(Math.random() * 20) + 2);\n      service\n      .getPlanet(planetId)\n      .then((planet)=>{\n            setPlanetName(planet.name);\n            setPopulation(planet.population);\n            setRotationPeriod(planet.rotationPeriod);\n            setDiameter(planet.diameter);\n            setId(planetId);\n            setLoading(false)\n        })\n        .catch((err)=>{});\n  };\n    const timer = setTimeout(updatePlanet, 5000);\n    return () => clearTimeout(timer);\n  });\n  if(loading){\n    return <Loader/>\n  }\n  return (\n    <section className=\"random-planet-bar-container\">\n      <img src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt = \"planet\"></img>\n      <ul className=\"planet-data\" key = {id}>\n        <li>\n            <span>Planet name:</span>\n          <h2>{planetName}</h2>\n        </li>\n        <li>\n        <span>Population: </span>\n            {population}\n        </li>\n        <li>\n        <span>Rotation Period: </span>\n            {rotationPeriod}\n            </li>\n        <li>\n        <span>Diameter: </span>\n            {diameter}\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nexport default RandomPlanetBar;\n","import React from 'react';\nimport SwapiService from \"../../Services/Service\";\nimport Loader from \"../Loader/Loader\";\n\nimport \"./PersonCard.css\";\nconst PersonCard = (props) => {\n    let service = new SwapiService();\n    const [person, setPerson] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [birthYear, setBirthYear] = React.useState(null);\n    const [eyeColor, setEyeColor] = React.useState(null);\n    const [loading, setLoading] = React.useState(true);\n    const {personId} = props;\n    React.useEffect(()=>{\n        if(!personId){\n            return;\n        };\n        service\n        .getPerson(personId)\n        .then((person)=>{\n            setPerson(personId);\n            setName(person.name);\n            setGender(person.gender);\n            setBirthYear(person.birthYear);\n            setEyeColor(person.eyeColor);\n            setLoading(false)\n        });\n    }, [props]);\n    if(loading){\n        return <span>Select characters</span>\n      }\n    return (\n        <div  className=\"detail-person\">\n                <img \n                    src={`https://starwars-visualguide.com/assets/img/characters/${personId}.jpg`} \n                    alt = \"characters\">\n                </img>\n                <ul className=\"detail-person-item\">\n                    <li>\n                        <span>Name:</span>\n                        <h2> {name}</h2>\n                    </li>\n                    <li>\n                        <span>Gender: {gender}</span>\n                    </li>\n                    <li>\n                        <span>Birth Year: {birthYear}</span>\n                    </li>\n                    <li>\n                        <span>Eye Color: {eyeColor}</span>\n                    </li>\n                </ul>\n\n        </div>\n    );\n};\n\nexport default PersonCard;","import React from \"react\";\nimport PersonCard from \"./PersonCard\";\nimport \"./Person.css\";\nimport Loader from \"../Loader/Loader\";\nimport SwapiService from \"../../Services/Service\";\n\nconst Person = (props) => {\n  const [peopleList, setPeopleList] = React.useState(null);\n  const [activeItem, setActiveItem] = React.useState(null);\n  React.useEffect(() => {\n    let service = new SwapiService();\n    service\n    .getAllPeople()\n    .then((peopleList) => {\n      setPeopleList(peopleList);\n    });\n  }, []);\n\n  if (!peopleList) {\n    return <Loader />;\n  }\n  const renderPerson = (arr) => {\n    return arr.map(({name, id}) => {\n      return (\n        <li \n        className={activeItem === id? \"persone-active\":\"person\"} \n        key={id}\n        onClick = { ()=> {\n          props.onItemSelected(id);\n          setActiveItem(id);\n          }}>\n          <a>{name}</a>\n        </li>\n      );\n    });\n  };\n  return (\n    <section className=\"persons-container\">\n      <ul className=\"person-list\">{renderPerson(peopleList)}</ul>\n      <PersonCard \n        personId = { props.personId }/>\n    </section>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport SwapiService from \"../../Services/Service\";\nimport \"./PlanetCard.css\";\n\n\nconst PlanetCard = (props) => {\n  let service = new SwapiService();\n  const [name, setName] = React.useState(null);\n  const [population, setPopulation] = React.useState(null);\n  const [diameter, setDiameter] = React.useState(null);\n  const [climate, setClimate] = React.useState(null);\n  const { planetId } = props;\n  const [loading, setLoading] = React.useState(true);\n\n  function getPlanet() {\n    if (!planetId) {\n      return;\n    }\n    service.getPlanet(planetId).then((planet) => {\n      setName(planet.name);\n      setPopulation(planet.population);\n      setDiameter(planet.diameter);\n      setClimate(planet.climate);\n      setLoading(false)\n    });\n  }\n  React.useEffect(() => {\n    getPlanet();\n  },[props]);\n  if(loading){\n    return <span>Select planets</span>\n  }\n  return (\n    <div className=\"detail-planet\">\n      <img\n        src={`https://starwars-visualguide.com/assets/img/planets/${planetId}.jpg`}\n        alt=\"planet\"\n      ></img>\n      <ul className=\"detail-planet-item\">\n        <li>\n          <span>Name:</span>\n          <h2> {name}</h2>\n        </li>\n        <li>\n          <span>Population: {population}</span>\n        </li>\n        <li>\n          <span>Diameter: {diameter}</span>\n        </li>\n        <li>\n          <span>Climate: {climate}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default PlanetCard;\n","import React from \"react\";\nimport SwapiService from \"../../Services/Service\";\nimport PlanetCard from \"./PlanetCard\";\nimport Loader from \"../Loader/Loader\";\nimport \"./Planets.css\";\n\nconst Planets = (props) => {\n  const [planetList, setPlanetList] = React.useState(null);\n  const [activeItem, setActiveItem] = React.useState(null);\n  React.useEffect(() => {\n    let service = new SwapiService();\n    service.getAllPlanets().then((planetList) => {\n      setPlanetList(planetList);\n    });\n  }, []);\n\n  if (!planetList) {\n    return <Loader />;\n  }\n  const renderPlanet = (arr) => {\n    return arr.map(({ name, id }) => {\n      return (\n        <li\n          className={activeItem === id ? \"planet-active\" : \"planet\"}\n          key={id}\n          onClick={() => {\n            props.onPlanetSelected(id);\n            setActiveItem(id);\n          }}\n        >\n          <a>{name}</a>\n        </li>\n      );\n    });\n  };\n  return (\n    <section className=\"planet-container\">\n      <ul className=\"planet-list\">{renderPlanet(planetList)}</ul>\n      <PlanetCard planetId={props.planetId} />\n    </section>\n  );\n};\n\nexport default Planets;\n","import React from \"react\";\nimport SwapiService from \"../../Services/Service\";\nimport \"./StarshipsCard.css\";\n\nconst StarshipsCard = (props) => {\n  let service = new SwapiService();\n  const [name, setName] = React.useState(null);\n  const [model, setModel] = React.useState(null);\n  const [manufacturer, setManufacturer] = React.useState(null);\n  const [length, setLength] = React.useState(null);\n  const [cargoCapacity, setCargoCapacity] = React.useState(null);\n  const { starshipId } = props;\n  const [loading, setLoading] = React.useState(true);\n\n  function getStarships() {\n    if (!starshipId) {\n      return;\n    }\n    service.getStarships(starshipId).then((starship) => {\n      setName(starship.name);\n      setModel(starship.model);\n      setManufacturer(starship.manufacturer);\n      setLength(starship.length);\n      setCargoCapacity(starship.cargoCapacity);\n      setLoading(false)\n    });\n  };\n  React.useEffect(() => {\n    getStarships();\n  },[props]);\n  if(loading){\n    return <span>Select starship</span>\n  }\n\n  return (\n    <div className=\"detail-starship\">\n      <img\n        src={`https://starwars-visualguide.com/assets/img/starships/${starshipId}.jpg`}\n        alt=\"starship\"\n      ></img>\n      <ul className=\"detail-starship-item\">\n        <li>\n          <span>Name:</span>\n          <h2> {name}</h2>\n        </li>\n        <li>\n          <span>Model: {model}</span>\n        </li>\n        <li>\n          <span>Manufacturer: {manufacturer}</span>\n        </li>\n        <li>\n          <span>Length: {length}</span>\n        </li>\n        <li>\n          <span>Cargo capacity: {cargoCapacity}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default StarshipsCard;\n","import React from \"react\";\nimport SwapiService from \"../../Services/Service\";\nimport Loader from \"../Loader/Loader\";\nimport StarshipsCard from \"./StarshipsCard\";\n\nimport \"./Starships.css\";\n\nconst Starships = (props) => {\n  const [starshipList, setStarshipList] = React.useState(null);\n  const [activeItem, setActiveItem] = React.useState(null);\n  React.useEffect(() => {\n    let service = new SwapiService();\n    service.getAllStarships().then((starshipList) => {\n      setStarshipList(starshipList);\n    });\n  }, []);\n  if (!starshipList) {\n    return <Loader />;\n  }\n  const renderStarships = (arr) => {\n    return arr.map(({ name, id }) => {\n      return (\n        <li\n          className={activeItem === id ? \"starship-active\" : \"starship\"}\n          key={id}\n          onClick={() => {\n            props.onStarshipSelected(id);\n            setActiveItem(id);\n          }}\n        >\n          <a>{name}</a>\n        </li>\n      );\n    });\n  };\n  return (\n    <section className=\"starship-container\">\n      <ul className=\"starship-list\">{renderStarships(starshipList)}</ul>\n      <StarshipsCard starshipId={props.starshipId} />\n    </section>\n  );\n};\n\nexport default Starships;\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport RandomPlanetBar from \"../RandomPlanetBar/RandomPlanetBar\";\nimport Person from \"../Person/Person\";\nimport PersonCard from \"../Person/PersonCard\";\n\nimport Planet from \"../Planets/Planets\";\nimport Starships from \"../Starships/Starships\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [selectedPerson, setSelectedPerson] = React.useState(null);\n  const [selectedPalnet, setSelectedPlanet] = React.useState(null);\n  const [selectedStarship, setSelectdStarship] = React.useState(null);\n  const onPlanetSelected =(id)=>{\n    setSelectedPlanet(id);\n  };\n  const onPersonSelected = (id) => {\n    setSelectedPerson(id);\n  };\n  const onStarshipSelected = (id) => {\n    setSelectdStarship(id);\n  };\n  return (\n    <div className=\"app-container\">\n      <Header />\n      <RandomPlanetBar />\n      <Switch>\n        {/* <Route path=\"/person\" component={ Person } /> */}\n        <Route\n          exact\n          path=\"/person\"\n          render={(props) => <Person \n            onItemSelected={onPersonSelected}\n            personId = { selectedPerson }\n            onClick = {(onPersonSelected)=> onPersonSelected}\n             />}\n        />\n        <Route\n        exact\n         path=\"/planets\" \n         render = {(props)=> <Planet\n          onPlanetSelected = {onPlanetSelected}\n          planetId = {selectedPalnet}\n          onClick = {(onPlanetSelected)=>onPlanetSelected}\n         />}\n         />\n        <Route\n        exact\n        path=\"/starships\" \n        render = {(props)=> <Starships\n          onStarshipSelected = {onStarshipSelected}\n         starshipId = {selectedStarship}\n         onClick = {(onStarshipSelected)=>onStarshipSelected}\n        />}\n        />\n      </Switch>\n      {/* <PersonCard personId = { selectedPerson }/> */}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}